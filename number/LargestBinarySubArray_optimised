Explanation :
-------------

0	1	2	3	4	5	6
0	1	0	0	1	1	0
						
						
i	count	maxlen				
0	-1	0				
1	0	2				
2	-1	2				
3	-2	2				
4	-1	4				
5	0	6				
6	-1	6				

########################################################################

import java.util.HashMap;
import java.util.Map;

public class LargestBinarySubArray
{
	public static void main(String[] args)
	{
		int[] nums = { 0, 1, 0, 0, 1, 1, 0 };

		Map<Integer, Integer> map = new HashMap<>();
		
		int maxlen = 0, count = 0;
		//initila count is 0, so adding entry with index -1
		map.put(0, -1);
		for (int i = 0; i < nums.length; i++)
		{
			count = count + (nums[i] == 1 ? 1 : -1);
			if (map.containsKey(count))
			{
				maxlen = Math.max(maxlen, i - map.get(count));
			} else
			{
				map.put(count, i);
			}
		}

		System.out.println(maxlen);

	}
}
